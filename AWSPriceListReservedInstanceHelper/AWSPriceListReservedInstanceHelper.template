{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Transform"                : "AWS::Serverless-2016-10-31",
    "Description"              : "An AWS Serverless Application.",


    "Parameters"               : {
        "LogRetentionInDays" : {
            "Type" : "Number",
            "Description" : "The number of days to retain the CloudWatch Logs for the function. If this is set to 0, it will be infinite retention.",
            "MinValue"    : 0,
            "Default"     : 7
        },
        "ResultsBucket"                  : {
            "Description" : "The bucket where the raw video will be uploaded to.",
            "Type"        : "String",
            "MinLength"   : 3,
            "MaxLength"   : 63,
            "AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$"
        },
        "NotificationEmail"  : {
            "Description" : "The email address notifications will be sent to when processing errors occur.",
            "Type"        : "String"
        },
        "Frequency"          : {
            "Description" : "The frequency the function will run based on the time unit set.",
            "Type"        : "Number",
            "MinValue"    : 1,
            "MaxValue"    : 60,
            "Default"     : 1
        },
        "TimeUnit"           : {
            "Description" : "The unit of time for the frequency.",
            "Type"        : "String",
            "AllowedValues" : [
                "second",
                "minute",
                "hour",
                "day"
            ],
            "Default"       : "minute"
        },

        "OrganizationTag"    : {
            "Description" : "The organization this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        },
        "ApplicationTag"     : {
            "Description" : "The application this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
            "Default"               : "ElasticTranscoderJobTrigger"
        },
        "EnvironmentTag"     : {
            "Description" : "The environment this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
            "Default"               : "dev"
        }
    },


    "Conditions"               : {
        "InfiniteRetention" : {
            "Fn::Equals" : [
                {
                    "Ref" : "LogRetentionInDays"
                },
                0
            ]
        },
        "AddS"              : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "Frequency"
                        },
                        1
                    ]
                }
            ]
        }
    },


    "Resources"                : {
        "SNSTopic" : {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "DisplayName" : "AWSPriceListReservedInstanceHelper",
                "Subscription" : [
                    {
                        "Protocol" : "email",
                        "Endpoint" : {
                            "Ref" : "NotificationEmail"
                        }
                    }
                ],
                "TopicName"    : "AWSPriceListReservedInstanceHelper_Notifications"
            }
        },

		"ResultsS3Bucket"   : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "BucketName" : {
                    "Ref" : "ResultsBucket"
                },
                "Tags"       : [
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },

        "LambdaExecutionRoleWorker" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "RoleName" : "LambdaPriceListWorkerRole",
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
		"LambdaExecutionRoleDistributor" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "RoleName" : "LambdaPriceListDistributorRole",
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },

        "LambdaCWLPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaCWLPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "logs:CreateLogStream",
                                "logs:CreateLogGroup",
                                "logs:DescribeLogStreams",
                                "logs:PutLogEvents",
                                "logs:DescribeLogGroups"
                            ],
                            "Resource" : {
                                "Fn::Join" : [
                                    "",
                                    [
                                        "arn:aws:logs:*:",
                                        {
                                            "Ref" : "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleWorker"
                    },
					{
                        "Ref" : "LambdaExecutionRoleDistributor"
                    }
                ]
            }
        },
        "LambdaKMSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaKMSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "kms:Decrypt"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleWorker"
                    },
					{
                        "Ref" : "LambdaExecutionRoleDistributor"
                    }
                ]
            }
        },
        "LambdaPricingPolicy" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaPricingPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "pricing:DescribeServices",
                                "pricing:GetAttributeValues",
                                "pricing:GetProducts"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleWorker"
                    }
                ]
            }
        },
        "LambdaSNSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaSNSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sns:Publish"
                            ],
                            "Resource" : [
                                {
                                    "Ref" : "SNSTopic"
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleWorker"
                    },
					{
                        "Ref" : "LambdaExecutionRoleDistributor"
                    }
                ]
            }
        },
		"LambdaS3Policy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaS3Policy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:PutObject"
                            ],
                            "Resource" : [
                                {
                                    "Fn::Join" : [
										"",
										[
											"arn:aws:s3:::",
											{
												"Ref" : "ResultsBucket"
											},
											"/*"
										]
									]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleWorker"
                    }
                ]
            }
        },
		"LambdaLambdaPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaLambdaPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "lambda:InvokeFunction"
                            ],
                            "Resource" : [
                                {
                                    "Fn::GetAtt" : [ "AWSPriceListReservedInstanceHelperWorker", "Arn"]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRoleDistributor"
                    }
                ]
            }
        },

        "CloudWatchLogGroupWorker"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : "/aws/lambda/AWSPriceListReservedInstanceHelperWorker",
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },
		"CloudWatchLogGroupDistributor"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : "/aws/lambda/AWSPriceListReservedInstanceHelperDistributor",
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },

        "AWSPriceListReservedInstanceHelperWorker" : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "AWSPriceListReservedInstanceHelper::BAMCIS.LambdaFunctions.AWSPriceListReservedInstanceHelper.Entrypoint::RunForServiceAsync",
				"FunctionName" : "AWSPriceListReservedInstanceHelperWorker",
				"Description": "Downloads the price list file for a specified service and formats it for ingestion by Athena.",
                "Runtime" : "dotnetcore2.0",
                "CodeUri" : "",
                "MemorySize" : 1920,
                "Timeout"    : 90,
                "Role"       : {
                    "Fn::GetAtt" : [
                        "LambdaExecutionRoleWorker",
                        "Arn"
                    ]
                },
				"Environment" : {
				    "Variables" : {
						"BUCKET" : {
							"Ref" : "ResultsS3Bucket"
						},
						"SNS" : {
							"Ref" : "SNSTopic"
						}
					}
				},
                "Tags"       : {
                    "Name" : "AWSPriceListReservedInstanceHelperWorker",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            }
        },

		"AWSPriceListReservedInstanceHelperDistributor" : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "AWSPriceListReservedInstanceHelper::BAMCIS.LambdaFunctions.AWSPriceListReservedInstanceHelper.Entrypoint::LaunchWorkersAsync",
				"FunctionName" : "AWSPriceListReservedInstanceHelperDistributor",
				"Description": "Kicks of the AWS price list formatter worker functions.",
                "Runtime" : "dotnetcore2.0",
                "CodeUri" : "",
                "MemorySize" : 128,
                "Timeout"    : 30,
                "Role"       : {
                    "Fn::GetAtt" : [
                        "LambdaExecutionRoleDistributor",
                        "Arn"
                    ]
                },
				"Environment" : {
				    "Variables" : {
						"FunctionName" : {
							"Ref" : "AWSPriceListReservedInstanceHelperWorker"
						},
						"SNS" : {
							"Ref" : "SNSTopic"
						}
					}
				},
                "Events"     : {
                    "Exec" : {
                        "Type" : "Schedule",
                        "Properties" : {
                            "Schedule" : {
                                "Fn::Join" : [
                                    "",
                                    [
                                        "rate(",
                                        {
                                            "Ref" : "Frequency"
                                        },
                                        " ",
                                        {
                                            "Ref" : "TimeUnit"
                                        },
                                        {
                                            "Fn::If" : [
                                                "AddS",
                                                "s",
                                                {
                                                    "Ref" : "AWS::NoValue"
                                                }
                                            ]
                                        },
                                        ")"
                                    ]
                                ]
                            }
                        }
                    }
                },
                "Tags"       : {
                    "Name" : "AWSPriceListReservedInstanceHelperDistributor",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            }
        }
	},

    "Outputs"                  : {
    }
}