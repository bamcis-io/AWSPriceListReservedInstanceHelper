{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Transform"                : "AWS::Serverless-2016-10-31",
    "Description"              : "AWS Price List Reserved Instance Helper",


    "Parameters"               : {
        "LogRetentionInDays" : {
            "Type" : "Number",
            "Description" : "The number of days to retain the CloudWatch Logs for the function. If this is set to 0, it will be infinite retention.",
            "MinValue"    : 0,
            "Default"     : 7
        },
        "ResultsBucket"                  : {
            "Description" : "The bucket where the raw video will be uploaded to.",
            "Type"        : "String",
            "MinLength"   : 3,
            "MaxLength"   : 63,
            "AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$"
        },
        "NotificationEmail"  : {
            "Description" : "The email address notifications will be sent to when processing errors occur.",
            "Type"        : "String"
        },
      	"WorkerMemory" : {
			"Description" : "The amount of memory assigned to the worker function",
			"Type" : "Number",
			"MinValue" : 128,
			"MaxValue" : 10240,
			"Default" : 4096
		},
        "EC2WorkerMemory" : {
			"Description" : "The amount of memory assigned to the worker function",
			"Type" : "Number",
			"MinValue" : 128,
			"MaxValue" : 10240,
			"Default" : 8192
		},
		"WorkerTimeout" : {
			"Type" : "Number",
			"Description" : "The amount of time to give the worker to complete. The EC2 and RDS jobs take much longer than the others.",
			"MinValue" : 60,
			"MaxValue" : 900,
			"Default" : 600,
			"ConstraintDescription" : "The timeout must be between 60 (1 minute) and 900 (15 minutes)."
		},
        "ComputeEC2" : {
            "Type" : "String",
            "Description" : "Specify whether to compute EC2 reserved instances. Not necessarily valuable anymore with Savings Plans.",
            "Default" : "false",
            "AllowedValues" : [
                "true",
                "false"
            ]
        },

        "OrganizationTag"    : {
            "Description" : "The organization this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        },
        "ApplicationTag"     : {
            "Description" : "The application this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        },
        "EnvironmentTag"     : {
            "Description" : "The environment this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$"
        }
    },

    "Conditions"               : {
        "InfiniteRetention" : {
            "Fn::Equals" : [
                {
                    "Ref" : "LogRetentionInDays"
                },
                0
            ]
        },
        "ComputeEC2": {
          "Fn::Equals": [
            {
              "Ref": "ComputeEC2"
            },
            "true"
          ]
        }
    },


    "Resources"                : {
        "SNSTopic" : {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "DisplayName" : "AWSPriceListReservedInstanceHelper",
                "Subscription" : [
                    {
                        "Protocol" : "email",
                        "Endpoint" : {
                            "Ref" : "NotificationEmail"
                        }
                    }
                ],
                "TopicName"    : "AWSPriceListReservedInstanceHelper_Notifications"
            }
        },
		"SQSDistributorDeadLetterQueue" : {
			"Type" : "AWS::SQS::Queue",
			"Properties" : {
			}
		},
		"SQSWorkerDeadLetterQueue" : {
			"Type" : "AWS::SQS::Queue",
			"Properties" : {
			}
		},

		"ResultsS3Bucket"   : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "BucketName" : {
                    "Ref" : "ResultsBucket"
                },
                "Tags"       : [
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },

        "LambdaPriceListWorkerRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
		"LambdaPriceListDistributorRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },

        "LambdaCWLPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaCWLPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "logs:CreateLogStream",
                                "logs:CreateLogGroup",
                                "logs:DescribeLogStreams",
                                "logs:PutLogEvents",
                                "logs:DescribeLogGroups"
                            ],
                            "Resource" : {
                                "Fn::Join" : [
                                    "",
                                    [
                                        "arn:aws:logs:*:",
                                        {
                                            "Ref" : "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    },
					{
                        "Ref" : "LambdaPriceListDistributorRole"
                    }
                ]
            }
        },
        "LambdaKMSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaKMSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "kms:Decrypt"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    },
					{
                        "Ref" : "LambdaPriceListDistributorRole"
                    }
                ]
            }
        },
        "LambdaPricingPolicy" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaPricingPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "pricing:DescribeServices",
                                "pricing:GetAttributeValues",
                                "pricing:GetProducts"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    }
                ]
            }
        },
        "LambdaSNSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaSNSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sns:Publish"
                            ],
                            "Resource" : [
                                {
                                    "Ref" : "SNSTopic"
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    },
					{
                        "Ref" : "LambdaPriceListDistributorRole"
                    }
                ]
            }
        },
		"LambdaS3Policy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaS3Policy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:PutObject"
                            ],
                            "Resource" : [
                                {
                                    "Fn::Join" : [
										"",
										[
											"arn:aws:s3:::",
											{
												"Ref" : "ResultsBucket"
											},
											"/*"
										]
									]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    }
                ]
            }
        },
		"LambdaLambdaPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaLambdaPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "lambda:InvokeFunction"
                            ],
                            "Resource" : [
                                {
                                    "Fn::GetAtt" : [ "AWSPriceListRIWorker", "Arn"]
                                },
                                {
                                    "Fn::GetAtt" : [ "AWSPriceListRIWorkerEC2", "Arn"]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListDistributorRole"
                    }
                ]
            }
        },
		"LambdaSQSWorkerPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaSQSWorkerPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sqs:SendMessage"
                            ],
                            "Resource" : [
                                {
                                    "Fn::GetAtt" : [ "SQSWorkerDeadLetterQueue", "Arn" ]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListWorkerRole"
                    }
                ]
            }
        },
		"LambdaSQSDistributorPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaSQSDistributorPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sqs:SendMessage"
                            ],
                            "Resource" : [
                                {
                                    "Fn::GetAtt" : [ "SQSDistributorDeadLetterQueue", "Arn" ]
                                }
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaPriceListDistributorRole"
                    }
                ]
            }
        },
		
        "CloudWatchLogGroupWorker"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : {
					"Fn::Sub" : "/aws/lambda/${AWSPriceListRIWorker}"
				},
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },
        "CloudWatchLogGroupWorkerEC2"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : {
					"Fn::Sub" : "/aws/lambda/${AWSPriceListRIWorkerEC2}"
				},
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },
		"CloudWatchLogGroupDistributor"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : {
					"Fn::Sub" : "/aws/lambda/${AWSPriceListRIDistributor}"
				},
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },

        "AWSPriceListRIWorker" : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "AWSPriceListReservedInstanceHelper::BAMCIS.LambdaFunctions.AWSPriceListReservedInstanceHelper.Entrypoint::RunForServiceAsync",
				"Description": "Downloads the price list file for a specified service and formats it for ingestion by Athena.",
                "Runtime" : "dotnet6",
                "CodeUri" : "",
                "Architectures" : ["arm64"],
                "MemorySize" : {
					"Ref" : "WorkerMemory"
				},
                "Timeout"    : {
					"Ref" : "WorkerTimeout"
				},
                "Role"       : {
                    "Fn::GetAtt" : [
                        "LambdaPriceListWorkerRole",
                        "Arn"
                    ]
                },
				"Environment" : {
				    "Variables" : {
						"BUCKET" : {
							"Ref" : "ResultsS3Bucket"
						},
						"SNS" : {
							"Ref" : "SNSTopic"
						}
					}
				},
				"DeadLetterQueue" : {
					"Type" : "SQS",
					"TargetArn" : {
						"Fn::GetAtt" : [ "SQSWorkerDeadLetterQueue", "Arn" ]
					}
				},
                "Tags"       : {
                    "Name" : "AWSPriceListRIWorker",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            },
			"DependsOn" : [
				"LambdaSQSWorkerPolicy"
			]
        },

        "AWSPriceListRIWorkerEC2" : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "AWSPriceListReservedInstanceHelper::BAMCIS.LambdaFunctions.AWSPriceListReservedInstanceHelper.Entrypoint::RunForServiceAsync",
				"Description": "Downloads the price list file for EC2 and formats it for ingestion by Athena.",
                "Runtime" : "dotnet6",
                "CodeUri" : "",
                "Architectures" : ["arm64"],
                "MemorySize" : {
					"Ref" : "EC2WorkerMemory"
				},
                "Timeout"    : {
					"Ref" : "WorkerTimeout"
				},
                "Role"       : {
                    "Fn::GetAtt" : [
                        "LambdaPriceListWorkerRole",
                        "Arn"
                    ]
                },
				"Environment" : {
				    "Variables" : {
						"BUCKET" : {
							"Ref" : "ResultsS3Bucket"
						},
						"SNS" : {
							"Ref" : "SNSTopic"
						}
					}
				},
				"DeadLetterQueue" : {
					"Type" : "SQS",
					"TargetArn" : {
						"Fn::GetAtt" : [ "SQSWorkerDeadLetterQueue", "Arn" ]
					}
				},
                "Tags"       : {
                    "Name" : "AWSPriceListRIWorker",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            },
			"DependsOn" : [
				"LambdaSQSWorkerPolicy"
			]
        },

		"AWSPriceListRIDistributor" : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "AWSPriceListReservedInstanceHelper::BAMCIS.LambdaFunctions.AWSPriceListReservedInstanceHelper.Entrypoint::LaunchWorkersAsync",
				"Description": "Kicks off the AWS price list formatter worker functions.",
                "Runtime" : "dotnet6",
                "Architectures" : ["arm64"],
                "CodeUri" : "",
                "MemorySize" : 128,
                "Timeout"    : 30,
                "Role"       : {
                    "Fn::GetAtt" : [
                        "LambdaPriceListDistributorRole",
                        "Arn"
                    ]
                },
				"Environment" : {
				    "Variables" : {
						"FunctionName" : {
							"Ref" : "AWSPriceListRIWorker"
						},
                        "EC2FunctionName" : {
                            "Ref" : "AWSPriceListRIWorkerEC2"
                        },
						"SNS" : {
							"Ref" : "SNSTopic"
						},
                        "ComputeEC2" : {
                            "Ref" : "ComputeEC2"
                        }
					}
				},
				"DeadLetterQueue" : {
					"Type" : "SQS",
					"TargetArn" : {
						"Fn::GetAtt" : [ "SQSDistributorDeadLetterQueue", "Arn" ]
					}
				},
                "Events"     : {
					"DailyNotification" : {
						"Type" : "SNS",
						"Properties" : {
							"Topic" : "arn:aws:sns:us-east-1:278350005181:daily-aggregated-price-list-api"
						}
					},
					"ChangeNotification" : {
						"Type" : "SNS",
						"Properties" : {
							"Topic" : "arn:aws:sns:us-east-1:278350005181:price-list-api"
						}
					}
                },
                "Tags"       : {
                    "Name" : "AWSPriceListRIDistributor",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            },
			"DependsOn" : [
				"LambdaSQSDistributorPolicy"
			]
        },

		"CloudWatchWorkerInvocationErrorAlarm" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"Properties" : {
				"ActionsEnabled" : "true",
				"AlarmActions" : [
					{
						"Ref" : "SNSTopic"
					}
				],
				"AlarmDescription" : "Alarm if Pricelist Reserved Instance Worker Has Failures Once in 60 Seconds",
				"ComparisonOperator" : "GreaterThanOrEqualToThreshold",
				"Namespace" : "AWS/Lambda",
				"MetricName" : "Errors",
				"Dimensions" : [
					{
						"Name" : "FunctionName",
						"Value" : {
							"Ref" : "AWSPriceListRIWorker"
						}
					}
				],
				"Statistic" : "Sum",
				"EvaluationPeriods" : "1",
				"Threshold" : "1",
				"Period" : "60",
				"TreatMissingData" : "notBreaching",
				"Unit" : "Count"
			}
		},
		"CloudWatchDistributorInvocationErrorAlarm" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"Properties" : {
				"ActionsEnabled" : "true",
				"AlarmActions" : [
					{
						"Ref" : "SNSTopic"
					}
				],
				"AlarmDescription" : "Alarm if Pricelist Reserved Instance Distributor has failures once in 60 seconds",
				"ComparisonOperator" : "GreaterThanOrEqualToThreshold",
				"Namespace" : "AWS/Lambda",
				"MetricName" : "Errors",
				"Dimensions" : [
					{
						"Name" : "FunctionName",
						"Value" : {
							"Ref" : "AWSPriceListRIDistributor"
						}
					}
				],
				"Statistic" : "Sum",
				"EvaluationPeriods" : "1",
				"Threshold" : "1",
				"Period" : "60",
				"TreatMissingData" : "notBreaching",
				"Unit" : "Count"
			}
		},
		"CloudWatchWorkerEnsureInvocationAlarm" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"Properties" : {
				"ActionsEnabled" : "true",
				"AlarmActions" : [
					{
						"Ref" : "SNSTopic"
					}
				],
				"AlarmDescription" : "Alarm if Pricelist Reserved Instance Worker does not execute at least six times a day.",
				"ComparisonOperator" : "LessThanThreshold",
				"Namespace" : "AWS/Lambda",
				"MetricName" : "Invocations",
				"Dimensions" : [
					{
						"Name" : "FunctionName",
						"Value" : {
							"Ref" : "AWSPriceListRIWorker"
						}
					}
				],
				"Statistic" : "Sum",
				"EvaluationPeriods" : "1",
				"Threshold" : {
                  "Fn::If": [
                    "ComputeEC2",
                    "6",
                    "5"
                  ]
                },
				"Period" : "86400",
				"Unit" : "Count",
				"TreatMissingData" : "notBreaching"
			}
		},
		"CloudWatchDistributorEnsureInvocationAlarm" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"Properties" : {
				"ActionsEnabled" : "true",
				"AlarmActions" : [
					{
						"Ref" : "SNSTopic"
					}
				],
				"AlarmDescription" : "Alarm if Pricelist Reserved Instance Distributor does not execute at least once a day",
				"ComparisonOperator" : "LessThanThreshold",
				"Namespace" : "AWS/Lambda",
				"MetricName" : "Invocations",
				"Dimensions" : [
					{
						"Name" : "FunctionName",
						"Value" : {
							"Ref" : "AWSPriceListRIWorker"
						}
					}
				],
				"Statistic" : "Sum",
				"EvaluationPeriods" : "1",
				"Threshold" : "1",
				"Period" : "86400",
				"Unit" : "Count",
				"TreatMissingData" : "notBreaching"
			}
		},
		"WorkerDeadLetterQueueDepthAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmDescription": "Alarm if Worker queue depth grows beyond 1 message in a 5 minute span.",
				"Namespace": "AWS/SQS",
				"MetricName": "ApproximateNumberOfMessagesVisible",
				"Dimensions": [
					{
						"Name": "QueueName",
						"Value" : { "Fn::GetAtt" : ["SQSWorkerDeadLetterQueue", "QueueName"] }
					}
				],
				"Statistic": "Sum",
				"Period": "300",
				"EvaluationPeriods": "1",
				"Threshold": "1",
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"TreatMissingData" : "ignore"
			}
		},
		"DistributorDeadLetterQueueDepthAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmDescription": "Alarm if Distributor queue depth grows beyond 1 message in a 5 minute span",
				"Namespace": "AWS/SQS",
				"MetricName": "ApproximateNumberOfMessagesVisible",
				"Dimensions": [
					{
						"Name": "QueueName",
						"Value" : { "Fn::GetAtt" : ["SQSDistributorDeadLetterQueue", "QueueName"] }
					}
				],
				"Statistic": "Sum",
				"Period": "300",
				"EvaluationPeriods": "1",
				"Threshold": "1",
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"TreatMissingData" : "ignore"
			}
		}
	},

    "Outputs"                  : {
    }
}
